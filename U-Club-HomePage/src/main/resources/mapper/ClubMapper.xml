<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.summer.mapper.ClubMapper">

    <!-- 结果映射 -->
    <resultMap id="ClubResultMap" type="com.example.summer.entity.Club">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="category" property="category"/>
        <result column="max_members" property="maxMembers"/>
        <result column="current_members" property="currentMembers"/>
        <result column="president_name" property="presidentName"/>
        <result column="president_phone" property="presidentPhone"/>
        <result column="president_email" property="presidentEmail"/>
        <result column="advisor_name" property="advisorName"/>
        <result column="advisor_phone" property="advisorPhone"/>
        <result column="meeting_time" property="meetingTime"/>
        <result column="meeting_location" property="meetingLocation"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="status" property="status"/>
    </resultMap>

    <!-- 基础字段 -->
    <sql id="Base_Column_List">
        id, name, description, category, max_members, current_members,
        president_name, president_phone, president_email, advisor_name, advisor_phone,
        meeting_time, meeting_location, created_time, updated_time, status
    </sql>

    <!-- 获取所有社团 -->
    <select id="selectAll" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        ORDER BY created_time DESC
    </select>

    <!-- 根据ID获取社团 -->
    <select id="selectById" parameterType="long" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        WHERE id = #{id}
    </select>

    <!-- 根据状态获取社团 -->
    <select id="selectByStatus" parameterType="string" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        WHERE status = #{status}
        ORDER BY created_time DESC
    </select>

    <!-- 根据分类获取社团 -->
    <select id="selectByCategory" parameterType="string" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        WHERE category = #{category}
        ORDER BY created_time DESC
    </select>

    <!-- 搜索社团 -->
    <select id="searchByKeyword" parameterType="string" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        WHERE name LIKE CONCAT('%', #{keyword}, '%')
           OR description LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY created_time DESC
    </select>

    <!-- 获取可加入的社团（未满员） -->
    <select id="selectAvailableClubs" resultMap="ClubResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM clubs
        WHERE current_members &lt; max_members
        ORDER BY created_time DESC
    </select>

    <!-- 插入社团 -->
    <insert id="insert" parameterType="com.example.summer.entity.Club" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO clubs (
            name, description, category, max_members, current_members,
            president_name, president_phone, president_email, advisor_name, advisor_phone,
            meeting_time, meeting_location, status, created_time, updated_time
        ) VALUES (
            #{name}, #{description}, #{category}, #{maxMembers}, #{currentMembers},
            #{presidentName}, #{presidentPhone}, #{presidentEmail}, #{advisorName}, #{advisorPhone},
            #{meetingTime}, #{meetingLocation}, #{status}, NOW(), NOW()
        )
    </insert>

    <!-- 更新社团 -->
    <update id="update" parameterType="com.example.summer.entity.Club">
        UPDATE clubs
        SET name = #{name},
            description = #{description},
            category = #{category},
            max_members = #{maxMembers},
            president_name = #{presidentName},
            president_phone = #{presidentPhone},
            president_email = #{presidentEmail},
            advisor_name = #{advisorName},
            advisor_phone = #{advisorPhone},
            meeting_time = #{meetingTime},
            meeting_location = #{meetingLocation},
            status = #{status},
            updated_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 删除社团 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM clubs WHERE id = #{id}
    </delete>

    <!-- 检查社团名称是否存在 -->
    <select id="existsByName" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0 FROM clubs WHERE name = #{name}
    </select>

    <!-- 更新社团成员数量 -->
    <update id="updateMemberCount">
        UPDATE clubs
        SET current_members = #{currentMembers},
            updated_time = NOW()
        WHERE id = #{id}
    </update>

</mapper> 